/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/health': {
    /** Health check */
    get: operations['public-health']
  }
  '/openapi.json': {
    get: operations['public-getOpenAPISpec']
  }
  '/customers': {
    get: operations['mgmt-listCustomers']
  }
  '/customers/{id}': {
    get: operations['mgmt-getCustomer']
  }
  '/customers/{customer_id}': {
    put: operations['mgmt-upsertCustomer']
  }
  '/customers/{customer_id}/connections': {
    get: operations['mgmt-listConnections']
  }
  '/customers/{customer_id}/connections/{provider_name}': {
    get: operations['mgmt-getConnection']
    delete: operations['mgmt-deleteConnection']
  }
  '/sync_configs': {
    get: operations['mgmt-listSyncConfigs']
  }
  '/connection_sync_configs': {
    get: operations['mgmt-getConnectionSyncConfig']
    put: operations['mgmt-upsertConnectionSyncConfig']
  }
  '/engagement/v2/contact': {
    get: operations['salesEngagement-listContacts']
  }
  '/engagement/v2/sequence': {
    get: operations['salesEngagement-listSequences']
  }
  '/engagement/v2/sequence_state': {
    get: operations['salesEngagement-listSequenceStates']
    post: operations['salesEngagement-insertSequenceState']
  }
  '/engagement/v2/user': {
    get: operations['salesEngagement-listUsers']
  }
  '/engagement/v2/account': {
    get: operations['salesEngagement-listAccounts']
  }
  '/engagement/v2/mailbox': {
    get: operations['salesEngagement-listMailboxes']
  }
  '/engagement/v2/account/_upsert': {
    post: operations['salesEngagement-upsertAccount']
  }
  '/engagement/v2/contact/_upsert': {
    post: operations['salesEngagement-upsertContact']
  }
  '/crm/v2/account-info': {
    get: operations['crm-accountInfo']
  }
  '/crm/v2/{entity}/_count': {
    get: operations['crm-countEntity']
  }
  '/crm/v2/account': {
    get: operations['crm-listAccounts']
    post: operations['crm-createAccount']
  }
  '/crm/v2/account/{id}': {
    get: operations['crm-getAccount']
    patch: operations['crm-updateAccount']
  }
  '/crm/v2/account/batch_read': {
    post: operations['crm-batchReadAccounts']
  }
  '/crm/v2/account/_upsert': {
    post: operations['crm-upsertAccount']
  }
  '/crm/v2/contact': {
    get: operations['crm-listContacts']
    post: operations['crm-createContact']
  }
  '/crm/v2/contact/{id}': {
    get: operations['crm-getContact']
    patch: operations['crm-updateContact']
  }
  '/crm/v2/contact/_batch_read': {
    post: operations['crm-batchReadContacts']
  }
  '/crm/v2/contact/_upsert': {
    post: operations['crm-upsertContact']
  }
  '/crm/v2/lead': {
    get: operations['crm-listLeads']
  }
  '/crm/v2/lead/{id}': {
    get: operations['crm-getLead']
  }
  '/crm/v2/opportunity': {
    get: operations['crm-listOpportunities']
  }
  '/crm/v2/opportunity/{id}': {
    get: operations['crm-getOpportunity']
  }
  '/crm/v2/user': {
    get: operations['crm-listUsers']
  }
  '/crm/v2/user/{id}': {
    get: operations['crm-getUser']
  }
  '/crm/v2/custom_objects/{object_name}': {
    get: operations['crm-listCustomObjectRecords']
    post: operations['crm-createCustomObjectRecord']
  }
  '/crm/v2/metadata/objects': {
    get: operations['crm-metadataListObjects']
    /** @description Create custom object schema */
    post: operations['crm-metadataCreateObject']
  }
  '/crm/v2/metadata/objects/{object_name}/properties': {
    get: operations['crm-metadataListObjectProperties']
  }
  '/crm/v2/metadata/associations': {
    post: operations['crm-metadataCreateAssociation']
  }
}

export interface webhooks {
  'scheduler.requested': {
    post: {
      requestBody?: {
        content: {
          'application/json': components['schemas']['webhooks.scheduler.requested']
        }
      }
      responses: {}
    }
  }
  'sync.requested': {
    post: {
      requestBody?: {
        content: {
          'application/json': components['schemas']['webhooks.sync.requested']
        }
      }
      responses: {}
    }
  }
  'sync.completed': {
    post: {
      requestBody?: {
        content: {
          'application/json': components['schemas']['webhooks.sync.completed']
        }
      }
      responses: {}
    }
  }
  'connection.created': {
    post: {
      requestBody?: {
        content: {
          'application/json': components['schemas']['webhooks.connection.created']
        }
      }
      responses: {}
    }
  }
}

export interface components {
  schemas: {
    'webhooks.scheduler.requested': {
      data: {
        provider_names: string[]
        /** @enum {string} */
        vertical: 'crm' | 'engagement'
        /** @enum {string} */
        sync_mode: 'full' | 'incremental'
      }
      /** @enum {string} */
      name: 'scheduler.requested'
      id?: string
    }
    'webhooks.sync.requested': {
      data: {
        customer_id: string
        provider_name: string
        /** @enum {string} */
        vertical: 'crm' | 'engagement'
        unified_objects?: string[]
        standard_objects?: string[]
        custom_objects?: string[]
        /**
         * @description Incremental by default
         * @enum {string}
         */
        sync_mode?: 'full' | 'incremental'
        destination_schema?: string
        page_size?: number
      }
      /** @enum {string} */
      name: 'sync.requested'
      id?: string
    }
    'webhooks.sync.completed': {
      data: {
        customer_id: string
        provider_name: string
        /** @enum {string} */
        vertical: 'crm' | 'engagement'
        unified_objects?: string[]
        standard_objects?: string[]
        custom_objects?: string[]
        /**
         * @description Incremental by default
         * @enum {string}
         */
        sync_mode?: 'full' | 'incremental'
        destination_schema?: string
        page_size?: number
        request_event_id?: string
        run_id: string
        metrics: {
          [key: string]: unknown
        }
        /** @enum {string} */
        result: 'SUCCESS' | 'USER_ERROR' | 'REMOTE_ERROR' | 'INTERNAL_ERROR'
        error_detail?: string
      }
      /** @enum {string} */
      name: 'sync.completed'
      id?: string
    }
    'webhooks.connection.created': {
      data: {
        customer_id: string
        provider_name: string
      }
      /** @enum {string} */
      name: 'connection.created'
      id?: string
    }
    /**
     * Error
     * @description The error information
     * @example {
     *   "code": "INTERNAL_SERVER_ERROR",
     *   "message": "Internal server error",
     *   "issues": []
     * }
     */
    'error.INTERNAL_SERVER_ERROR': {
      /**
       * @description The error message
       * @example Internal server error
       */
      message: string
      /**
       * @description The error code
       * @example INTERNAL_SERVER_ERROR
       */
      code: string
      /**
       * @description An array of issues that were responsible for the error
       * @example []
       */
      issues?: {
        message: string
      }[]
    }
    customer: {
      customer_id: string
      name?: string | null
      /** @description Email, but not validated as data from Supaglue has invalid emails for now */
      email?: string | null
    }
    /**
     * Error
     * @description The error information
     * @example {
     *   "code": "BAD_REQUEST",
     *   "message": "Invalid input data",
     *   "issues": []
     * }
     */
    'error.BAD_REQUEST': {
      /**
       * @description The error message
       * @example Invalid input data
       */
      message: string
      /**
       * @description The error code
       * @example BAD_REQUEST
       */
      code: string
      /**
       * @description An array of issues that were responsible for the error
       * @example []
       */
      issues?: {
        message: string
      }[]
    }
    /**
     * Error
     * @description The error information
     * @example {
     *   "code": "NOT_FOUND",
     *   "message": "Not found",
     *   "issues": []
     * }
     */
    'error.NOT_FOUND': {
      /**
       * @description The error message
       * @example Not found
       */
      message: string
      /**
       * @description The error code
       * @example NOT_FOUND
       */
      code: string
      /**
       * @description An array of issues that were responsible for the error
       * @example []
       */
      issues?: {
        message: string
      }[]
    }
    connection: {
      id: string
      customer_id: string
      provider_name: string
    }
    sync_config: components['schemas']['connection_sync_config'] & {
      provider_name: string
      /** @description If true, the sync will start automatically when the connection is created. */
      auto_start_on_connection?: boolean | null
    }
    connection_sync_config: {
      destination_config?: {
        type: string
        schema?: string | null
      } | null
      unified_objects?:
        | {
            object: string
          }[]
        | null
      standard_objects?:
        | {
            object: string
          }[]
        | null
      custom_objects?:
        | {
            object: string
          }[]
        | null
    }
    'sales-engagement.contact': {
      id: string
      first_name: string
      last_name: string
      owner_id: string
      account_id?: string
      job_title: string
      address: components['schemas']['sales-engagement.address']
      email_addresses: components['schemas']['sales-engagement.email_address'][]
      phone_numbers: components['schemas']['sales-engagement.phone_number'][]
      open_count: number
      click_count: number
      reply_count: number
      bounced_count: number
      created_at: string
      updated_at: string
      is_deleted: boolean
      last_modified_at: string
      raw_data?: {
        [key: string]: unknown
      }
    }
    'sales-engagement.address': {
      city: string
      country: string
      postal_code: string
      state: string
      street_1: string
      street_2: string
    }
    'sales-engagement.email_address': {
      email_address: string
      /** @enum {string} */
      email_address_type: 'primary' | 'personal' | 'work' | 'other'
    }
    'sales-engagement.phone_number': {
      phone_number: string
      /** @enum {string} */
      phone_number_type: 'primary' | 'work' | 'home' | 'mobile' | 'other'
    }
    'sales-engagement.sequence': {
      id: string
      name?: string
      created_at: string
      updated_at: string
      is_deleted: boolean
      last_modified_at: string
      owner_id: string
      tags: string[]
      num_steps: number
      metrics?: {
        [key: string]: unknown
      }
      is_enabled: boolean
      raw_data?: {
        [key: string]: unknown
      }
    }
    'sales-engagement.sequenceState': {
      id: string
      state: string
      created_at: string
      updated_at: string
      is_deleted: boolean
      last_modified_at: string
      sequence_id: string
      contact_id: string
      mailbox_id: string
      user_id: string
      raw_data?: {
        [key: string]: unknown
      }
    }
    'sales-engagement.user': {
      id: string
      first_name: string
      last_name: string
      email: string
      created_at: string
      updated_at: string
      is_deleted: boolean
      last_modified_at: string
      raw_data?: {
        [key: string]: unknown
      }
    }
    'sales-engagement.account': {
      id: string
      name: string
      created_at: string
      updated_at: string
      is_deleted: boolean
      last_modified_at: string
      domain: string
      owner_id: string
      raw_data?: {
        [key: string]: unknown
      }
    }
    'sales-engagement.mailbox': {
      id: string
      email: string
      created_at: string
      updated_at: string
      is_deleted: boolean
      last_modified_at: string
      user_id: string
      raw_data?: {
        [key: string]: unknown
      }
    }
    'crm.account': {
      id: string
      /** @description ISO8601 date string */
      updated_at: string
      raw_data?: {
        [key: string]: unknown
      }
      name?: string | null
      is_deleted?: boolean | null
      website?: string | null
      industry?: string | null
      number_of_employees?: number | null
      owner_id?: string | null
      created_at?: string | null
      /** @example Integration API */
      description?: string | null
      /** @description date-time */
      last_activity_at?: string | null
      addresses?: components['schemas']['crm.address'][] | null
      phone_numbers?:
        | {
            phone_number: string | null
            phone_number_type: components['schemas']['crm.phone_number_type']
          }[]
        | null
      lifecycle_stage?: components['schemas']['crm.lifecycle_stage'] | null
      last_modified_at?: string | null
    }
    'crm.address': {
      address_type: components['schemas']['crm.address_type']
      city: string | null
      country: string | null
      postal_code: string | null
      state: string | null
      street_1: string | null
      street_2: string | null
    }
    /** @enum {string} */
    'crm.address_type': 'primary' | 'mailing' | 'other' | 'billing' | 'shipping'
    /** @enum {string} */
    'crm.phone_number_type': 'primary' | 'mobile' | 'fax' | 'other'
    /** @enum {string} */
    'crm.lifecycle_stage':
      | 'subscriber'
      | 'lead'
      | 'marketingqualifiedlead'
      | 'salesqualifiedlead'
      | 'opportunity'
      | 'customer'
      | 'evangelist'
      | 'other'
    'crm.account_input': {
      /** @example Integration API */
      description?: string | null
      industry?: string | null
      name?: string | null
      number_of_employees?: number | null
      website?: string | null
      addresses?: components['schemas']['crm.address'][] | null
      phone_numbers?:
        | {
            phone_number: string | null
            phone_number_type: components['schemas']['crm.phone_number_type']
          }[]
        | null
      owner_id?: string | null
      lifecycle_stage?: components['schemas']['crm.lifecycle_stage'] | null
      passthrough_fields?: {
        [key: string]: unknown
      } | null
    }
    'crm.contact': {
      id: string
      /** @description ISO8601 date string */
      updated_at: string
      raw_data?: {
        [key: string]: unknown
      }
      first_name?: string | null
      last_name?: string | null
      /** @description Primary email address */
      email?: string | null
      /** @description Primary phone number */
      phone?: string | null
    }
    'crm.contact_input': {
      first_name?: string | null
      last_name?: string | null
      /** @description Primary email address */
      email?: string | null
      /** @description Primary phone number */
      phone?: string | null
      passthrough_fields?: {
        [key: string]: unknown
      } | null
    }
    'crm.lead': {
      id: string
      /** @description ISO8601 date string */
      updated_at: string
      raw_data?: {
        [key: string]: unknown
      }
      name?: string | null
      first_name?: string | null
      last_name?: string | null
      owner_id?: string | null
      title?: string | null
      company?: string | null
      converted_date?: string | null
      lead_source?: string | null
      converted_account_id?: string | null
      converted_contact_id?: string | null
      addresses?: components['schemas']['crm.address'][] | null
      email_addresses?: components['schemas']['crm.email_address'][] | null
      phone_numbers?:
        | {
            phone_number: string | null
            phone_number_type: components['schemas']['crm.phone_number_type']
          }[]
        | null
      created_at?: string | null
      is_deleted?: boolean | null
      last_modified_at?: string | null
    }
    'crm.email_address': {
      email_address: string
      email_address_type: components['schemas']['crm.email_address_type']
    }
    /** @enum {string} */
    'crm.email_address_type': 'primary' | 'work' | 'other'
    'crm.opportunity': {
      id: string
      /** @description ISO8601 date string */
      updated_at: string
      raw_data?: {
        [key: string]: unknown
      }
      name?: string | null
      description?: string | null
      owner_id?: string | null
      status?: components['schemas']['crm.opportunity_status'] | null
      stage?: string | null
      close_date?: string | null
      account_id?: string | null
      pipeline?: string | null
      amount?: number | null
      last_activity_at?: string | null
      created_at?: string | null
      is_deleted?: boolean | null
      last_modified_at?: string | null
    }
    /** @enum {string} */
    'crm.opportunity_status': 'OPEN' | 'WON' | 'LOST'
    'crm.user': {
      id: string
      /** @description ISO8601 date string */
      updated_at: string
      raw_data?: {
        [key: string]: unknown
      }
      name?: string | null
      email?: string | null
      is_active?: boolean | null
      created_at?: string | null
      is_deleted?: boolean | null
      last_modified_at?: string | null
    }
    warning: {
      title?: string
      problem_type?: string
      detail?: string
    }
    'crm.meta.object': {
      id: string
      name: string
    }
    'crm.meta.custom_object_field': {
      /** @description The machine name of the property as it appears in the third-party Provider. In Salesforce, this must end with `__c`. */
      id: string
      /** @description The human-readable name of the property as provided by the third-party Provider. */
      label: string
      /** @description A description of the field. */
      description?: string
      /** @description Whether or not this field is required. Must be false for Salesforce boolean fields. */
      is_required?: boolean
      /** @description The default value for the property. Only supported for Salesforce. */
      default_value?: string | number | boolean
      /**
       * @description Only applicable for Hubspot. If specified, Supaglue will attempt to attach the field to this group if it exists, or create it if it doesn't.
       * @example my group
       */
      group_name?: string
      type: components['schemas']['crm.meta.property_type']
      /** @description Only applicable in Salesforce. If not given, will default to 18. */
      precision?: number
      /** @description Only applicable in Salesforce. If not given, will default to 0. */
      scale?: number
      /** @description The list of options for a picklist/multipicklist field. */
      options?: components['schemas']['crm.meta.pick_list_option'][]
      /** @description The raw details of the property as provided by the third-party Provider, if available. */
      raw_details?: {
        [key: string]: unknown
      }
    }
    /**
     * @description :::note
     * `picklist` and `multipicklist` property types are currently only supported in Salesforce and Hubspot
     * :::
     *
     * :::note
     * `url` property type currently is only natively supported in Salesforce.
     * :::
     * @enum {string}
     */
    'crm.meta.property_type':
      | 'text'
      | 'textarea'
      | 'number'
      | 'picklist'
      | 'multipicklist'
      | 'date'
      | 'datetime'
      | 'boolean'
      | 'url'
      | 'other'
    'crm.meta.pick_list_option': {
      /** @example Option 1 */
      label: string
      /** @example option_1 */
      value: string
      description?: string
      /** @description Defaults to false. */
      hidden?: boolean
    }
    'crm.meta.property': {
      /**
       * @description The machine name of the property as it appears in the third-party Provider
       * @example FirstName
       */
      id: string
      /**
       * @description The human-readable name of the property as provided by the third-party Provider.
       * @example First Name
       */
      label: string
      /**
       * @description The type of the property as provided by the third-party Provider. These types are not unified by Supaglue. For Intercom, this is string, integer, boolean, or object. For Outreach, this is integer, boolean, number, array, or string.
       * @example string
       */
      type?: string
      /**
       * @description The raw details of the property as provided by the third-party Provider, if available.
       * @example {}
       */
      raw_details?: {
        [key: string]: unknown
      }
    }
    'crm.meta.association_schema': {
      id: string
      /** @example contact */
      source_object: string
      /** @example my_custom_object */
      target_object: string
      display_name: string
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}

export type $defs = Record<string, never>

export type external = Record<string, never>

export interface operations {
  /** Health check */
  'public-health': {
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': string
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'public-getOpenAPISpec': {
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': unknown
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'mgmt-listCustomers': {
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': components['schemas']['customer'][]
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'mgmt-getCustomer': {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': components['schemas']['customer']
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'mgmt-upsertCustomer': {
    parameters: {
      path: {
        customer_id: string
      }
    }
    requestBody: {
      content: {
        'application/json': {
          name?: string | null
          /** @description Email, but not validated as data from Supaglue has invalid emails for now */
          email?: string | null
        }
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': components['schemas']['customer']
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'mgmt-listConnections': {
    parameters: {
      path: {
        customer_id: string
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': components['schemas']['connection'][]
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'mgmt-getConnection': {
    parameters: {
      path: {
        customer_id: string
        provider_name: string
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': components['schemas']['connection']
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'mgmt-deleteConnection': {
    parameters: {
      path: {
        customer_id: string
        provider_name: string
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': unknown
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'mgmt-listSyncConfigs': {
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': components['schemas']['sync_config'][]
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'mgmt-getConnectionSyncConfig': {
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': components['schemas']['connection_sync_config']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'mgmt-upsertConnectionSyncConfig': {
    requestBody: {
      content: {
        'application/json': {
          destination_config?: {
            type: string
            schema?: string | null
          } | null
          unified_objects?:
            | {
                object: string
              }[]
            | null
          standard_objects?:
            | {
                object: string
              }[]
            | null
          custom_objects?:
            | {
                object: string
              }[]
            | null
        }
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': components['schemas']['connection_sync_config']
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'salesEngagement-listContacts': {
    parameters: {
      query?: {
        cursor?: string | null
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            next_page_cursor?: string | null
            items: components['schemas']['sales-engagement.contact'][]
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'salesEngagement-listSequences': {
    parameters: {
      query?: {
        cursor?: string | null
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            next_page_cursor?: string | null
            items: components['schemas']['sales-engagement.sequence'][]
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'salesEngagement-listSequenceStates': {
    parameters: {
      query?: {
        cursor?: string | null
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            next_page_cursor?: string | null
            items: components['schemas']['sales-engagement.sequenceState'][]
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'salesEngagement-insertSequenceState': {
    requestBody: {
      content: {
        'application/json': {
          record: {
            /** @example 9f3e97fd-4d5d-4efc-959d-bbebfac079f5 */
            contact_id: string
            /** @example ae4be028-9078-4850-a0bf-d2112b7c4d11 */
            mailbox_id: string
            /** @example b854e510-1c40-4ef6-ade4-8eb35f49d331 */
            sequence_id: string
            /** @example c590dc63-8e43-48a4-8154-1fbb00ac936b */
            user_id?: string | null
          }
        }
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            record?: {
              id: string
            }
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'salesEngagement-listUsers': {
    parameters: {
      query?: {
        cursor?: string | null
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            next_page_cursor?: string | null
            items: components['schemas']['sales-engagement.user'][]
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'salesEngagement-listAccounts': {
    parameters: {
      query?: {
        cursor?: string | null
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            next_page_cursor?: string | null
            items: components['schemas']['sales-engagement.account'][]
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'salesEngagement-listMailboxes': {
    parameters: {
      query?: {
        cursor?: string | null
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            next_page_cursor?: string | null
            items: components['schemas']['sales-engagement.mailbox'][]
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'salesEngagement-upsertAccount': {
    requestBody: {
      content: {
        'application/json': {
          record: {
            /** @example My Company */
            name?: string | null
            /** @example mycompany.com */
            domain?: string | null
            /** @example 9f3e97fd-4d5d-4efc-959d-bbebfac079f5 */
            owner_id?: string | null
            /** @example ae4be028-9078-4850-a0bf-d2112b7c4d11 */
            account_id?: string | null
            custom_fields?: {
              [key: string]: unknown
            } | null
          }
          upsert_on: {
            /** @description The name of the account to upsert on. Supported for Outreach, Salesloft, and Apollo. */
            name?: string
            /** @description The domain of the account to upsert on. Only supported for Outreach and Salesloft. */
            domain?: string
          }
        }
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            record?: {
              id: string
            }
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'salesEngagement-upsertContact': {
    requestBody: {
      content: {
        'application/json': {
          record: {
            /** @example James */
            first_name?: string | null
            /** @example Smith */
            last_name?: string | null
            /** @example CEO */
            job_title?: string | null
            /**
             * @example {
             *   "city": "San Francisco",
             *   "country": "US",
             *   "postal_code": "94107",
             *   "state": "CA",
             *   "street_1": "525 Brannan",
             *   "street_2": null
             * }
             */
            address: {
              city?: string | null
              country?: string | null
              postal_code?: string | null
              state?: string | null
              street_1?: string | null
              street_2?: string | null
            }
            /**
             * @example [
             *   {
             *     "email_address": "hello@revtron.ai",
             *     "email_address_type": "work"
             *   }
             * ]
             */
            email_addresses: {
              email_address: string
              /** @enum {string|null} */
              email_address_type?: 'primary' | 'personal' | 'work'
            }[]
            /**
             * @example [
             *   {
             *     "phone_number": "+14151234567",
             *     "phone_number_type": "work"
             *   }
             * ]
             */
            phone_numbers: {
              phone_number: string
              /** @enum {string} */
              phone_number_type:
                | 'primary'
                | 'work'
                | 'home'
                | 'mobile'
                | 'other'
            }[]
            /** @example 9f3e97fd-4d5d-4efc-959d-bbebfac079f5 */
            owner_id?: string | null
            /** @example ae4be028-9078-4850-a0bf-d2112b7c4d11 */
            account_id?: string | null
            custom_fields?: {
              [key: string]: unknown
            } | null
          }
          upsert_on: {
            /** @description Contact email to upsert on. Supported for Outreach, Salesloft, and Apollo. */
            email?: string
          }
        }
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            record?: {
              id: string
            }
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'crm-accountInfo': {
    parameters: {
      query?: {
        id?: string | null
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            accountType?: string | null
            companyCurrency?: string | null
            utcOffset?: string | null
            portalId?: number | null
            uiDomain?: string | null
            timeZone?: string | null
            dataHostingLocation?: string | null
            utcOffsetMilliseconds?: number | null
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'crm-countEntity': {
    parameters: {
      path: {
        entity: string
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            count: number
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'crm-listAccounts': {
    parameters: {
      query?: {
        sync_mode?: 'full' | 'incremental'
        cursor?: string | null
        page_size?: number
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            next_cursor?: string | null
            has_next_page: boolean
            items: components['schemas']['crm.account'][]
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'crm-createAccount': {
    requestBody: {
      content: {
        'application/json': {
          record: components['schemas']['crm.account_input']
        }
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            record: components['schemas']['crm.account']
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'crm-getAccount': {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            record: components['schemas']['crm.account']
            raw?: unknown
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'crm-updateAccount': {
    parameters: {
      path: {
        id: string
      }
    }
    requestBody: {
      content: {
        'application/json': {
          record: components['schemas']['crm.account_input']
        }
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            record: components['schemas']['crm.account']
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'crm-batchReadAccounts': {
    requestBody: {
      content: {
        'application/json': {
          ids: string[]
          properties: string[]
        }
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': components['schemas']['crm.account'][]
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'crm-upsertAccount': {
    requestBody: {
      content: {
        'application/json': {
          upsert_on: {
            /**
             * @description The key to upsert on. Only `website` is supported for Salesforce, while both `domain` and `website` are supported for Hubspot.
             * @enum {string}
             */
            key: 'domain' | 'website'
            /** @description The values to upsert on. If more than one value is provided, it will act as a logical OR. If more than one account is found that matches, then an error will be thrown. */
            values: string[]
          }
          record: components['schemas']['crm.account_input']
        }
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            record: components['schemas']['crm.account']
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'crm-listContacts': {
    parameters: {
      query?: {
        sync_mode?: 'full' | 'incremental'
        cursor?: string | null
        page_size?: number
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            next_cursor?: string | null
            has_next_page: boolean
            items: components['schemas']['crm.contact'][]
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'crm-createContact': {
    requestBody: {
      content: {
        'application/json': {
          record: components['schemas']['crm.contact_input']
        }
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            record: components['schemas']['crm.contact']
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'crm-getContact': {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            record: components['schemas']['crm.contact']
            raw?: unknown
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'crm-updateContact': {
    parameters: {
      path: {
        id: string
      }
    }
    requestBody: {
      content: {
        'application/json': {
          record: components['schemas']['crm.contact_input']
        }
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            record: components['schemas']['crm.contact']
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'crm-batchReadContacts': {
    requestBody: {
      content: {
        'application/json': {
          ids: string[]
          properties: string[]
        }
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': components['schemas']['crm.contact'][]
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'crm-upsertContact': {
    requestBody: {
      content: {
        'application/json': {
          upsert_on: {
            /**
             * @description The key to upsert on. Only `email` is supported for all providers.
             * @enum {string}
             */
            key: 'email'
            /** @description The values to upsert on. If more than one value is provided, it will act as a logical OR. If more than one record is found that matches, then an error will be thrown. */
            values: string[]
          }
          record: components['schemas']['crm.contact_input']
        }
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            record: components['schemas']['crm.contact']
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'crm-listLeads': {
    parameters: {
      query?: {
        sync_mode?: 'full' | 'incremental'
        cursor?: string | null
        page_size?: number
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            next_cursor?: string | null
            has_next_page: boolean
            items: components['schemas']['crm.lead'][]
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'crm-getLead': {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            record: components['schemas']['crm.lead']
            raw?: unknown
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'crm-listOpportunities': {
    parameters: {
      query?: {
        sync_mode?: 'full' | 'incremental'
        cursor?: string | null
        page_size?: number
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            next_cursor?: string | null
            has_next_page: boolean
            items: components['schemas']['crm.opportunity'][]
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'crm-getOpportunity': {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            record: components['schemas']['crm.opportunity']
            raw?: unknown
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'crm-listUsers': {
    parameters: {
      query?: {
        sync_mode?: 'full' | 'incremental'
        cursor?: string | null
        page_size?: number
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            next_cursor?: string | null
            has_next_page: boolean
            items: components['schemas']['crm.user'][]
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'crm-getUser': {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            record: components['schemas']['crm.user']
            raw?: unknown
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'crm-listCustomObjectRecords': {
    parameters: {
      query?: {
        sync_mode?: 'full' | 'incremental'
        cursor?: string | null
        page_size?: number
      }
      path: {
        object_name: string
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            next_cursor?: string | null
            has_next_page: boolean
            items: unknown[]
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'crm-createCustomObjectRecord': {
    parameters: {
      path: {
        object_name: string
      }
    }
    requestBody: {
      content: {
        'application/json': {
          record: {
            [key: string]: unknown
          }
        }
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            record?: unknown
            warnings?: components['schemas']['warning'][]
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'crm-metadataListObjects': {
    parameters: {
      query?: {
        type?: 'standard' | 'custom'
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': components['schemas']['crm.meta.object'][]
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  /** @description Create custom object schema */
  'crm-metadataCreateObject': {
    requestBody: {
      content: {
        'application/json': {
          name: string
          description: string | null
          labels: {
            singular: string
            plural: string
          }
          primary_field_id: string
          fields: components['schemas']['crm.meta.custom_object_field'][]
        }
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': components['schemas']['crm.meta.object']
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'crm-metadataListObjectProperties': {
    parameters: {
      path: {
        object_name: string
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': components['schemas']['crm.meta.property'][]
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Not found */
      404: {
        content: {
          'application/json': components['schemas']['error.NOT_FOUND']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
  'crm-metadataCreateAssociation': {
    requestBody: {
      content: {
        'application/json': {
          source_object: string
          target_object: string
          /** @description The underlying provider may change this (e.g. adding `__c` for Salesforce). */
          suggested_key_name: string
          display_name: string
        }
      }
    }
    responses: {
      /** @description Successful response */
      200: {
        content: {
          'application/json': {
            association_schema: components['schemas']['crm.meta.association_schema']
            warnings?: components['schemas']['warning'][]
          }
        }
      }
      /** @description Invalid input data */
      400: {
        content: {
          'application/json': components['schemas']['error.BAD_REQUEST']
        }
      }
      /** @description Internal server error */
      500: {
        content: {
          'application/json': components['schemas']['error.INTERNAL_SERVER_ERROR']
        }
      }
    }
  }
}

export interface oasTypes {
  components: components
  external: external
  operations: operations
  paths: paths
  webhooks: webhooks
}

export default oasTypes
